<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- [spring annotation] 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.yuecheng.hops">
		<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" /> -->
	</context:component-scan>
    
    <bean id="springUtils" lazy-init="false" class="com.yuecheng.hops.common.utils.SpringUtils"></bean>
    
   
	<!-- [spring message source] -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:message/messages</value>
				<value>classpath:message/exception</value>
				<value>classpath:message/validation</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties" />

	
	<!-- [JPA Entity] Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" ref="entityManagerFactoryScanList"/>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

    <!-- [JPA Entity]  Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.yuecheng.hops" repository-impl-postfix="Impl" transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
		
    <!-- [JPA Impl] hibernate实现配置 -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- [JPA TX]  Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- [SPRING TX ANNOTATION] 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	
	<!-- [MYBATIS SPRING SUPPORT] MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.yuecheng.hops.identity.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml" />
		
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
	</bean>
	
	<!-- [MYBATIS SPRING SUPPORT] 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
<!-- 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
<!-- 		<property name="basePackage" value="com.yuecheng.hops" /> -->
<!-- 		<property name="annotationClass" value="com.yuecheng.hops.common.persistence.annotation.MyBatisRepository"/> -->
<!-- 	</bean> -->

	<!-- [SPRING VALIDATION WITH HIBERNATE VALIDATOR]以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >  
	    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
	    <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
	    <property name="validationMessageSource" ref="messageSource"/>  
	</bean> 
	
	<bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor"/>
	
	<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

	<mvc:annotation-driven validator="validator"/>
	
	<!-- [SPRING WITH EHCACHE] annotation -->  
	<cache:annotation-driven cache-manager="cacheManager" />  

    <!-- [SPRING WITH EHCACHE] cacheManager工厂类，指定ehcache.xml的位置 -->  
    <bean id="cacheManagerFactory"  
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"  
        p:configLocation="classpath:ehcache/ehcache-cluster.xml" />  
  
    <!-- [SPRING WITH EHCACHE] 声明cacheManager -->  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"  
        p:cacheManager-ref="cacheManagerFactory" />  
        
    <bean id="hopsCacheUtil" lazy-init="false" class="com.yuecheng.hops.common.hopscache.HopsCacheUtil">
   		<property name="ehCacheCacheManager" ref="cacheManager" />
    </bean>
</beans>